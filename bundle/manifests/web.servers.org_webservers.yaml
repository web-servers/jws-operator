apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: webservers.web.servers.org
spec:
  group: web.servers.org
  names:
    kind: WebServer
    listKind: WebServerList
    plural: webservers
    singular: webserver
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Web Server is the schema for the webservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WebServerSpec defines the desired state of WebServer
            properties:
              applicationName:
                description: The base for the names of the deployed application resources
                pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                type: string
              environmentVariables:
                description: Environment variables for deployment
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              persistentLogs:
                description: Persistent logs configuration
                properties:
                  catalinaLogs:
                    description: If true operator will log tomcat's catalina logs
                    type: boolean
                  enableAccessLogs:
                    description: If true operator will log tomcat's access logs
                    type: boolean
                  storageClass:
                    description: StorageClass name of the storage class we want to
                      use for the bound
                    type: string
                  volumeName:
                    description: VolumeName is the name of pv we eant to bound
                    type: string
                type: object
              podResources:
                description: Configuration of the resources used by the WebServer,
                  ie CPU and memory, use limits and requests
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              replicas:
                description: The desired number of replicas for the application
                format: int32
                minimum: 0
                type: integer
              securityContext:
                description: SecurityContext defines the security capabilities required
                  to run the application.
                properties:
                  allowPrivilegeEscalation:
                    description: 'AllowPrivilegeEscalation controls whether a process
                      can gain more privileges than its parent process. This bool
                      directly controls if the no_new_privs flag will be set on the
                      container process. AllowPrivilegeEscalation is true always when
                      the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
                      Note that this field cannot be set when spec.os.name is windows.'
                    type: boolean
                  capabilities:
                    description: The capabilities to add/drop when running containers.
                      Defaults to the default set of capabilities granted by the container
                      runtime. Note that this field cannot be set when spec.os.name
                      is windows.
                    properties:
                      add:
                        description: Added capabilities
                        items:
                          description: Capability represent POSIX capabilities type
                          type: string
                        type: array
                      drop:
                        description: Removed capabilities
                        items:
                          description: Capability represent POSIX capabilities type
                          type: string
                        type: array
                    type: object
                  privileged:
                    description: Run container in privileged mode. Processes in privileged
                      containers are essentially equivalent to root on the host. Defaults
                      to false. Note that this field cannot be set when spec.os.name
                      is windows.
                    type: boolean
                  procMount:
                    description: procMount denotes the type of proc mount to use for
                      the containers. The default is DefaultProcMount which uses the
                      container runtime defaults for readonly paths and masked paths.
                      This requires the ProcMountType feature flag to be enabled.
                      Note that this field cannot be set when spec.os.name is windows.
                    type: string
                  readOnlyRootFilesystem:
                    description: Whether this container has a read-only root filesystem.
                      Default is false. Note that this field cannot be set when spec.os.name
                      is windows.
                    type: boolean
                  runAsGroup:
                    description: The GID to run the entrypoint of the container process.
                      Uses runtime default if unset. May also be set in PodSecurityContext.  If
                      set in both SecurityContext and PodSecurityContext, the value
                      specified in SecurityContext takes precedence. Note that this
                      field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsNonRoot:
                    description: Indicates that the container must run as a non-root
                      user. If true, the Kubelet will validate the image at runtime
                      to ensure that it does not run as UID 0 (root) and fail to start
                      the container if it does. If unset or false, no such validation
                      will be performed. May also be set in PodSecurityContext.  If
                      set in both SecurityContext and PodSecurityContext, the value
                      specified in SecurityContext takes precedence.
                    type: boolean
                  runAsUser:
                    description: The UID to run the entrypoint of the container process.
                      Defaults to user specified in image metadata if unspecified.
                      May also be set in PodSecurityContext.  If set in both SecurityContext
                      and PodSecurityContext, the value specified in SecurityContext
                      takes precedence. Note that this field cannot be set when spec.os.name
                      is windows.
                    format: int64
                    type: integer
                  seLinuxOptions:
                    description: The SELinux context to be applied to the container.
                      If unspecified, the container runtime will allocate a random
                      SELinux context for each container.  May also be set in PodSecurityContext.  If
                      set in both SecurityContext and PodSecurityContext, the value
                      specified in SecurityContext takes precedence. Note that this
                      field cannot be set when spec.os.name is windows.
                    properties:
                      level:
                        description: Level is SELinux level label that applies to
                          the container.
                        type: string
                      role:
                        description: Role is a SELinux role label that applies to
                          the container.
                        type: string
                      type:
                        description: Type is a SELinux type label that applies to
                          the container.
                        type: string
                      user:
                        description: User is a SELinux user label that applies to
                          the container.
                        type: string
                    type: object
                  seccompProfile:
                    description: The seccomp options to use by this container. If
                      seccomp options are provided at both the pod & container level,
                      the container options override the pod options. Note that this
                      field cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: localhostProfile indicates a profile defined
                          in a file on the node should be used. The profile must be
                          preconfigured on the node to work. Must be a descending
                          path, relative to the kubelet's configured seccomp profile
                          location. Must only be set if type is "Localhost".
                        type: string
                      type:
                        description: "type indicates which kind of seccomp profile
                          will be applied. Valid options are: \n Localhost - a profile
                          defined in a file on the node should be used. RuntimeDefault
                          - the container runtime default profile should be used.
                          Unconfined - no profile should be applied."
                        type: string
                    required:
                    - type
                    type: object
                  windowsOptions:
                    description: The Windows specific settings applied to all containers.
                      If unspecified, the options from the PodSecurityContext will
                      be used. If set in both SecurityContext and PodSecurityContext,
                      the value specified in SecurityContext takes precedence. Note
                      that this field cannot be set when spec.os.name is linux.
                    properties:
                      gmsaCredentialSpec:
                        description: GMSACredentialSpec is where the GMSA admission
                          webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                          inlines the contents of the GMSA credential spec named by
                          the GMSACredentialSpecName field.
                        type: string
                      gmsaCredentialSpecName:
                        description: GMSACredentialSpecName is the name of the GMSA
                          credential spec to use.
                        type: string
                      hostProcess:
                        description: HostProcess determines if a container should
                          be run as a 'Host Process' container. This field is alpha-level
                          and will only be honored by components that enable the WindowsHostProcessContainers
                          feature flag. Setting this field without the feature flag
                          will result in errors when validating the Pod. All of a
                          Pod's containers must have the same effective HostProcess
                          value (it is not allowed to have a mix of HostProcess containers
                          and non-HostProcess containers).  In addition, if HostProcess
                          is true then HostNetwork must also be set to true.
                        type: boolean
                      runAsUserName:
                        description: The UserName in Windows to run the entrypoint
                          of the container process. Defaults to the user specified
                          in image metadata if unspecified. May also be set in PodSecurityContext.
                          If set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: string
                    type: object
                type: object
              tlsConfig:
                description: TLS configuration
                properties:
                  certificateVerification:
                    description: 'certificateVerification for tomcat configuration:
                      required/optional or empty.'
                    type: string
                  routeHostname:
                    description: Route behaviour:[tls]hostname/NONE or empty.
                    type: string
                  tlsPassword:
                    description: TLSPassword passphrase for the key in the client.key
                    type: string
                  tlsSecret:
                    description: TLSSecret secret containing server.cert the server
                      certificate, server.key the server key and optional ca.cert
                      the CA cert of the client certificates
                    type: string
                type: object
              useInsightsClient:
                description: Allow Insights client
                type: boolean
              useSessionClustering:
                description: Use session clustering
                type: boolean
              webImage:
                description: (Deployment method 1) Application image
                properties:
                  applicationImage:
                    description: The name of the application image to be deployed
                    type: string
                  imagePullSecret:
                    description: secret to pull from the docker repository
                    type: string
                  webApp:
                    description: The source code for a webapp to be built and deployed
                    properties:
                      builder:
                        description: The information required to build the application
                        properties:
                          applicationBuildScript:
                            description: The script that the BuilderImage will use
                              to build the application war and move it to /mnt
                            type: string
                          image:
                            description: Image of the container where the web application
                              will be built
                            type: string
                        required:
                        - image
                        type: object
                      contextDir:
                        description: Subdirectory in the source repository
                        type: string
                      name:
                        description: 'Name of the web application (default: ROOT.war)'
                        type: string
                      sourceRepositoryRef:
                        description: Branch in the source repository
                        type: string
                      sourceRepositoryURL:
                        description: URL for the repository of the application sources
                        type: string
                      webAppWarImage:
                        description: Docker repository to push the built image
                        type: string
                      webAppWarImagePushSecret:
                        description: secret to push to the docker repository
                        type: string
                    required:
                    - builder
                    - sourceRepositoryURL
                    - webAppWarImage
                    - webAppWarImagePushSecret
                    type: object
                  webServerHealthCheck:
                    description: Pod health checks information
                    properties:
                      serverLivenessScript:
                        description: String for the pod liveness health check logic
                        type: string
                      serverReadinessScript:
                        description: String for the pod readiness health check logic
                        type: string
                    required:
                    - serverReadinessScript
                    type: object
                required:
                - applicationImage
                type: object
              webImageStream:
                description: (Deployment method 2) Imagestream
                properties:
                  imageStreamName:
                    description: The imagestream containing the image to be deployed
                    type: string
                  imageStreamNamespace:
                    description: The namespace where the image stream is located
                    type: string
                  webServerHealthCheck:
                    description: Pod health checks information
                    properties:
                      serverLivenessScript:
                        description: String for the pod liveness health check logic
                        type: string
                      serverReadinessScript:
                        description: String for the pod readiness health check logic
                        type: string
                    required:
                    - serverReadinessScript
                    type: object
                  webSources:
                    description: (Optional) Source code information
                    properties:
                      contextDir:
                        description: Subdirectory in the source repository
                        type: string
                      sourceRepositoryRef:
                        description: Branch in the source repository
                        type: string
                      sourceRepositoryUrl:
                        description: URL for the repository of the application sources
                        type: string
                      webSourcesParams:
                        description: (Optional) Sources related parameters
                        properties:
                          artifactDir:
                            description: Directory where the jar/war is created
                            type: string
                          genericWebhookSecret:
                            description: (Deprecated - Use WebhookSecrets instead)
                              Secret string for a generic web hook
                            type: string
                          githubWebhookSecret:
                            description: (Deprecated - Use WebhookSecrets instead)
                              Secret string for a Github web hook
                            type: string
                          mavenMirrorUrl:
                            description: URL to a maven repository
                            type: string
                        type: object
                      webhookSecrets:
                        description: Webhook secrets configuration
                        properties:
                          generic:
                            description: Secret for generic webhook
                            type: string
                          github:
                            description: Secret for Github webhook
                            type: string
                          gitlab:
                            description: Secret for Gitlab webhook
                            type: string
                        type: object
                    required:
                    - sourceRepositoryUrl
                    type: object
                required:
                - imageStreamName
                - imageStreamNamespace
                type: object
            required:
            - applicationName
            - replicas
            type: object
          status:
            description: WebServerStatus defines the observed state of WebServer
            properties:
              hosts:
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              pods:
                items:
                  description: PodStatus defines the observed state of pods running
                    the WebServer application
                  properties:
                    name:
                      type: string
                    podIP:
                      type: string
                    state:
                      description: Represent the state of the Pod, it is used especially
                        during scale down.
                      enum:
                      - ACTIVE
                      - PENDING
                      - FAILED
                      type: string
                  required:
                  - name
                  - podIP
                  - state
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              replicas:
                description: Replicas is the actual number of replicas for the application
                format: int32
                type: integer
              scalingdownPods:
                description: "Represents the number of pods which are in scaledown
                  process what particular pod is scaling down can be verified by PodStatus
                  \n Read-only."
                format: int32
                type: integer
              selector:
                description: selector for pods, used by HorizontalPodAutoscaler
                type: string
            required:
            - replicas
            - scalingdownPods
            - selector
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
